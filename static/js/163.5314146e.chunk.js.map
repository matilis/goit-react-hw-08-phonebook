{"version":3,"file":"static/js/163.5314146e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx","redux/contacts/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactForm_wrapper__-Umw-\",\"form\":\"ContactForm_form__dhl+T\",\"form__name\":\"ContactForm_form__name__0MHHc\",\"form__number\":\"ContactForm_form__number__uRpmt\",\"form__input\":\"ContactForm_form__input__VGD4-\",\"form__button\":\"ContactForm_form__button__MT1Jk\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const stateContacts = useSelector(selectContacts);\n  const stateContactsNames = stateContacts.map(contact => contact.name);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name: event.target.elements.name.value,\n      number: event.target.elements.number.value,\n    };\n\n    if (stateContactsNames.includes(contact.name)) {\n      event.target.reset();\n      return alert(`${contact.name} is alredy in contacts`);\n    }\n\n    dispatch(addContact(contact));\n\n    event.target.reset();\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.form__name}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[A-Za-z.'\\- ]+$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            className={css.form__input}\n            placeholder=\"Contact name\"\n          />\n        </label>\n\n        <label className={css.form__number}>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"^\\+?\\d{1,4}?\\s?\\(?\\d{1,4}?\\)?\\s?\\d{1,4}\\s?\\d{1,4}\\s?\\d{1,9}$\"\n            title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Contact number\"\n            className={css.form__input}\n          />\n        </label>\n\n        <button type=\"submit\" className={css.form__button}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactList_contacts__jDmyV\",\"contacts__item\":\"ContactList_contacts__item__9ozWV\",\"fade-in\":\"ContactList_fade-in__nGTVL\",\"contacts__name\":\"ContactList_contacts__name__ItpdU\",\"contacts__number\":\"ContactList_contacts__number__+j+yn\",\"contact__icon\":\"ContactList_contact__icon__PsMFg\",\"contacts__btn\":\"ContactList_contacts__btn__I3XUZ\",\"contacts__button\":\"ContactList_contacts__button__uwkrO\",\"contacts__wrapperName\":\"ContactList_contacts__wrapperName__+QL-w\",\"contacts__wrapperNumber\":\"ContactList_contacts__wrapperNumber__DjRso\",\"contacts__wrapperBtn\":\"ContactList_contacts__wrapperBtn__k0POK\"};","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, editContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport editSvg from 'images/icon-pencil.png';\nimport deleteSvg from 'images/icon-garbage.png';\nimport saveSvg from 'images/icon-save.gif';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const [editingContactId, setEditingContactId] = useState(null);\n  const [editedName, setEditedName] = useState('');\n  const [editedNumber, setEditedNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleEdit = (id, name, number) => {\n    setEditingContactId(id);\n    setEditedName(name);\n    setEditedNumber(number);\n  };\n\n  const handleSave = id => {\n    const editedContact = {\n      id: id,\n      name: editedName,\n      number: editedNumber,\n    };\n\n    dispatch(editContact(editedContact));\n\n    setEditingContactId(null);\n    setEditedName('');\n    setEditedNumber('');\n  };\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ul className={css.contacts}>\n      {contacts.map(contact => (\n        <li key={contact.id} className={css.contacts__item}>\n          {editingContactId === contact.id ? (\n            <>\n              <input\n                type=\"text\"\n                value={editedName}\n                className={css.contacts__wrapperName}\n                onChange={e => setEditedName(e.target.value)}\n              />\n              <input\n                type=\"text\"\n                value={editedNumber}\n                className={css.contacts__wrapperNumber}\n                onChange={e => setEditedNumber(e.target.value)}\n              />\n              <button\n                className={css.contacts__wrapperBtn}\n                type=\"button\"\n                onClick={() => handleSave(contact.id)}\n              >\n                <img\n                  className={css.contact__icon}\n                  src={saveSvg}\n                  alt=\"save icon\"\n                />\n              </button>\n            </>\n          ) : (\n            <>\n              <p className={css.contacts__name}>{contact.name}</p>\n              <p className={css.contacts__number}>{contact.number}</p>\n              <div className={css.contacts__btn}>\n                <button\n                  type=\"button\"\n                  onClick={() =>\n                    handleEdit(contact.id, contact.name, contact.number)\n                  }\n                  className={css.contacts__button}\n                >\n                  <img\n                    className={css.contact__icon}\n                    src={editSvg}\n                    alt=\"edit icon pencil\"\n                  />\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => handleDelete(contact.id)}\n                  className={css.contacts__button}\n                >\n                  <img\n                    className={css.contact__icon}\n                    src={deleteSvg}\n                    alt=\"delete icon garbage\"\n                  />\n                </button>\n              </div>\n            </>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filter__input\":\"Filter_filter__input__toa89\"};","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filtersSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleInputChange = event =>\n    dispatch(filterContact(event.target.value));\n\n  return (\n    <div className={css.filter}>\n      <input\n        className={css.filter__input}\n        onChange={handleInputChange}\n        placeholder=\"Find contact by name\"\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form__wrapper\":\"LoginForm_form__wrapper__wolm3\",\"form\":\"LoginForm_form__gPEx5\",\"form__label\":\"LoginForm_form__label__fqunJ\",\"form__input\":\"LoginForm_form__input__09r8K\",\"form__btn\":\"LoginForm_form__btn__jFr2r\"};","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport css from './LoginForm.module.css';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <div className={css.form__wrapper}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.form__label}>\n          Email\n          <input\n            className={css.form__input}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"john.nick@gmail.com\"\n          />\n        </label>\n        <label className={css.form__label}>\n          Password\n          <input\n            className={css.form__input}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"xxxxxxx\"\n          />\n        </label>\n        <button className={css.form__btn} type=\"submit\">\n          Log in\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form__wrapper\":\"RegisterForm_form__wrapper__XogRl\",\"form\":\"RegisterForm_form__Tv43W\",\"form__label\":\"RegisterForm_form__label__drWoo\",\"form__input\":\"RegisterForm_form__input__9aHOm\",\"form__btn\":\"RegisterForm_form__btn__TW+4G\"};","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport css from './RegisterForm.module.css';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <div className={css.form__wrapper}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.form__label}>\n          Username\n          <input\n            className={css.form__input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Nick\"\n          />\n        </label>\n        <label className={css.form__label}>\n          Email\n          <input\n            className={css.form__input}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"john.nick@gmail.com\"\n          />\n        </label>\n        <label className={css.form__label}>\n          Password\n          <input\n            className={css.form__input}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"xxxxxxx\"\n          />\n        </label>\n        <button className={css.form__btn} type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { RegisterForm } from 'components';\nimport { Helmet } from 'react-helmet';\n\nconst Register = () => (\n  <div>\n    <Helmet>\n      <title>Register</title>\n    </Helmet>\n    <RegisterForm />\n  </div>\n);\nexport default Register;\n","import { createSelector } from '@reduxjs/toolkit';\n\n//ten drugi contacts =>state.contacts.contacts; on wpada do  initialState w contactsSlice.\n//jezeli zmienie tu nazwe to tam tez musze np. =>state.contacts.items;\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectStatusFilter = state => state.filters;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectStatusFilter],\n  (contacts, statusFilter) => {\n    if (statusFilter === '') {\n      return contacts;\n    } else {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(statusFilter.filter)\n      );\n    }\n  }\n);\n"],"names":["ContactForm","dispatch","useDispatch","stateContactsNames","useSelector","selectContacts","map","contact","name","_jsx","className","css","children","_jsxs","onSubmit","event","preventDefault","target","elements","value","number","includes","reset","alert","concat","addContact","type","pattern","title","required","placeholder","ContactList","contacts","selectVisibleContacts","_useState","useState","_useState2","_slicedToArray","editingContactId","setEditingContactId","_useState3","_useState4","editedName","setEditedName","_useState5","_useState6","editedNumber","setEditedNumber","id","_Fragment","onChange","e","onClick","editedContact","editContact","handleSave","src","saveSvg","alt","deleteContact","Filter","filterContact","LoginForm","form","currentTarget","logIn","email","password","RegisterForm","register","Helmet","state","selectIsLoading","isLoading","selectError","error","createSelector","filters","statusFilter","filter","toLowerCase"],"sourceRoot":""}