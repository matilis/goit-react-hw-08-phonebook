{"version":3,"file":"static/js/969.50db142a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Contacts/Contacts.jsx","redux/contacts/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__input\":\"ContactForm_form__input__VGD4-\",\"form__button\":\"ContactForm_form__button__MT1Jk\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const stateContacts = useSelector(selectContacts);\n  const stateContactsNames = stateContacts.map(contact => contact.name);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name: event.target.elements.name.value,\n      number: event.target.elements.number.value,\n    };\n\n    if (stateContactsNames.includes(contact.name)) {\n      event.target.reset();\n      return alert(`${contact.name} is alredy in contacts`);\n    }\n\n    dispatch(addContact(contact));\n\n    event.target.reset();\n  };\n\n  // import css from './ContactForm.module.css';\n  // export const ContactForm = ({ onSubmit }) => {\n  //   const handleSubmit = e => {\n  //     e.preventDefault();\n  //     onSubmit(e);\n  //   };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.form__label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[A-Za-z.'\\- ]+$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            className={css.form__input}\n            placeholder=\"Contact name\"\n          />\n        </label>\n\n        <label className={css.form__label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"^\\+?\\d{1,4}?\\s?\\(?\\d{1,4}?\\)?\\s?\\d{1,4}\\s?\\d{1,4}\\s?\\d{1,9}$\"\n            title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Contact number\"\n            className={css.form__input}\n          />\n        </label>\n\n        <button type=\"submit\" className={css.form__button}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactList_contacts__jDmyV\",\"contacts__item\":\"ContactList_contacts__item__9ozWV\",\"contacts__name\":\"ContactList_contacts__name__ItpdU\",\"contacts__number\":\"ContactList_contacts__number__+j+yn\",\"contacts__button\":\"ContactList_contacts__button__uwkrO\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  const dispatch = useDispatch();\n\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <ul className={css.contacts}>\n      {contacts.map(contact => (\n        <li key={contact.id} className={css.contacts__item}>\n          <p className={css.contacts__name}>{contact.name}</p>\n          <p className={css.contacts__number}>{contact.number}</p>\n          <button\n            type=\"button\"\n            value={contact.id}\n            onClick={() => handleDelete(contact.id)}\n            className={css.contacts__button}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filter__input\":\"Filter_filter__input__toa89\"};","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filtersSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleInputChange = event =>\n    dispatch(filterContact(event.target.value));\n\n  return (\n    <div className={css.filter}>\n      <h3>Find contact by name</h3>\n      <input\n        className={css.filter__input}\n        onChange={handleInputChange}\n        placeholder=\"Enter name\"\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form__wrapper\":\"LoginForm_form__wrapper__wolm3\",\"form\":\"LoginForm_form__gPEx5\",\"form__label\":\"LoginForm_form__label__fqunJ\",\"form__input\":\"LoginForm_form__input__09r8K\",\"form__btn\":\"LoginForm_form__btn__jFr2r\"};","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport css from './LoginForm.module.css';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <div className={css.form__wrapper}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.form__label}>\n          Email\n          <input\n            className={css.form__input}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"john.nick@gmail.com\"\n          />\n        </label>\n        <label className={css.form__label}>\n          Password\n          <input\n            className={css.form__input}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"xxxxxxx\"\n          />\n        </label>\n        <button className={css.form__btn} type=\"submit\">\n          Log in\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form__wrapper\":\"RegisterForm_form__wrapper__XogRl\",\"form\":\"RegisterForm_form__Tv43W\",\"form__label\":\"RegisterForm_form__label__drWoo\",\"form__input\":\"RegisterForm_form__input__9aHOm\",\"form__btn\":\"RegisterForm_form__btn__TW+4G\"};","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport css from './RegisterForm.module.css';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <div className={css.form__wrapper}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.form__label}>\n          Username\n          <input\n            className={css.form__input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Nick\"\n          />\n        </label>\n        <label className={css.form__label}>\n          Email\n          <input\n            className={css.form__input}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"john.nick@gmail.com\"\n          />\n        </label>\n        <label className={css.form__label}>\n          Password\n          <input\n            className={css.form__input}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"xxxxxxx\"\n          />\n        </label>\n        <button className={css.form__btn} type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { useSelector } from 'react-redux';\nimport { ContactList } from 'components';\nimport { ContactForm } from 'components';\nimport { Filter } from 'components';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n\n      <div>\n        <Filter />\n        <ContactForm />\n        {isLoading ? <p>Loading contacts...</p> : <ContactList />}\n        {error && <p>Data loading error</p>}\n      </div>\n    </div>\n  );\n};\nexport default Contacts;\n","import { createSelector } from '@reduxjs/toolkit';\n\n//ten drugi contacts =>state.contacts.contacts; on wpada do  initialState w contactsSlice.\n//jezeli zmienie tu nazwe to tam tez musze np. =>state.contacts.items;\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectStatusFilter = state => state.filters;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectStatusFilter],\n  (contacts, statusFilter) => {\n    if (statusFilter === '') {\n      return contacts;\n    } else {\n      return contacts.filter(\n        contact =>\n          contact.name.toLowerCase().includes(statusFilter.filter) ?? []\n      );\n    }\n  }\n);\n"],"names":["ContactForm","dispatch","useDispatch","stateContactsNames","useSelector","selectContacts","map","contact","name","_jsx","children","_jsxs","onSubmit","event","preventDefault","target","elements","value","number","includes","reset","alert","concat","addContact","className","css","type","pattern","title","required","placeholder","ContactList","contacts","selectVisibleContacts","id","onClick","deleteContact","Filter","onChange","filterContact","LoginForm","form","currentTarget","logIn","email","password","RegisterForm","register","isLoading","selectIsLoading","error","selectError","Helmet","state","createSelector","filters","statusFilter","filter","_contact$name$toLower","toLowerCase"],"sourceRoot":""}